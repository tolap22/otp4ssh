#!/bin/bash
# Smart Python launcher that tries python3, python, then python2
# This script automatically finds the best available Python interpreter

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PYTHON_SCRIPT="$SCRIPT_DIR/ssh-otp.py"

# Fallback function - single exit point
fallback_to_shell() {
    echo "Warning: Allowing fallback access to prevent lockout" >&2
    exec /bin/bash -l
}

# Check if Python script exists and is readable
if [ ! -f "$PYTHON_SCRIPT" ]; then
    echo "Error: Python script not found: $PYTHON_SCRIPT" >&2
    fallback_to_shell
fi

if [ ! -r "$PYTHON_SCRIPT" ]; then
    echo "Error: Python script not readable: $PYTHON_SCRIPT" >&2
    fallback_to_shell
fi

# Try Python versions in order of preference
for python_cmd in python3 python python2; do
    if command -v "$python_cmd" >/dev/null 2>&1; then
        # Test if we can actually execute the Python script
        if "$python_cmd" -c "import sys; sys.exit(0)" 2>/dev/null; then
            # Try to run the actual script, capture any errors
            if "$python_cmd" "$PYTHON_SCRIPT" --help >/dev/null 2>&1; then
                # Script runs successfully, execute it with arguments
                exec "$python_cmd" "$PYTHON_SCRIPT" "$@"
            else
                echo "Warning: Python script failed to run" >&2
                fallback_to_shell
            fi
        else
            echo "Warning: Python interpreter '$python_cmd' failed basic test" >&2
            continue
        fi
    fi
done

echo "Error: No working Python interpreter found (python3, python, or python2)" >&2
fallback_to_shell
